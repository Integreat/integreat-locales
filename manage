#!/usr/bin/node

const program = require('commander')
const fs = require('fs')
const path = require('path')

const { reduce, map, union } = require('lodash')

function parseFormat(value) {
  if (!['csv', 'json'].includes(value)) {
    throw new Error("Format must be xml or json")
  }
  return value
}

program
  .version('0.1.0')
  .option('-d, --debug', 'enable extreme logging')
  .option('-c, --config <config_file>', 'set configuration for managing translations', 'config.json')

program
  .command('check <locales_file>')
  .action(function (localesFile, options) {
    console.log(localesFile)
  })

program
  .command('convert <locales_file> <format>')
  .action(function (locales, format, options) {
    const { targetLanguages, sourceLanguage } = JSON.parse(fs.readFileSync(program.config, 'utf8'))

    if (path.extname(locales) === '.json') {
      const json = JSON.parse(fs.readFileSync(locales, 'utf8'))

      const keys = reduce(locales, (moduleAcc, languages, moduleKey) => {
        const keysPerLanguage = map(languages, values => Object.keys(values))
        moduleAcc[moduleKey] = union(...keysPerLanguage)
        return moduleAcc
      }, {})

      targetLanguages.map(targetLanguage => {


      })


    } else {
      throw new Error("nyi")
    }
  })

program.parse(process.argv)

console.log(program.opts())
console.log(program.config)
